{%- assign product = all_products[section.settings.product_handle] | default: product -%}

<div class="hyperlab-v10-social-proof">
  <h2 class="section-title" style="color: {{ section.settings.title_color }}; font-size: {{ section.settings.title_size }}px;">
    {{ section.settings.title }}
  </h2>
  
  <div class="reels-container">
    <div class="reels-scroll-wrapper">
      {%- for block in section.blocks -%}
        <div class="reel-bubble" 
             data-reel-url="{{ block.settings.reel_url }}"
             data-platform="{{ block.settings.platform }}"
             {{ block.shopify_attributes }}>
          <div class="reel-thumbnail">
            {% if block.settings.video_preview != blank %}
              <video class="preview-video" loop muted playsinline>
                <source src="{{ block.settings.video_preview | file_url }}" type="video/mp4">
              </video>
            {% elsif block.settings.thumbnail_image != blank %}
              <img src="{{ block.settings.thumbnail_image | img_url: '80x80', crop: 'center' }}" 
                   alt="{{ block.settings.title }}"
                   loading="lazy">
            {% endif %}
            <div class="play-button">
              {% if block.settings.platform == 'tiktok' %}
                <svg width="16" height="16" viewBox="0 0 24 24" fill="none">
                  <path d="M19.589 6.686a4.793 4.793 0 0 1-3.77-4.245V2h-3.166v13.672c0 2.088-1.677 3.766-3.765 3.766-2.089 0-3.767-1.678-3.767-3.766s1.678-3.766 3.767-3.766c.847 0 1.626.28 2.258.748V9.07c-.713-.344-1.51-.538-2.35-.538-3.066 0-5.555 2.49-5.555 5.556 0 3.066 2.489 5.555 5.555 5.555 3.066 0 5.556-2.489 5.556-5.555V7.56a8.161 8.161 0 0 0 5.237 1.9V6.686z" fill="white"/>
                </svg>
              {% else %}
                <svg width="16" height="16" viewBox="0 0 24 24" fill="none">
                  <path d="M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12 6.477 2 12 2zm0 2a8 8 0 1 0 0 16 8 8 0 0 0 0-16zm-2 11.5a1 1 0 0 1-.936-.649l-1.5-4a1 1 0 1 1 1.872-.702l.564 1.503 1.068-2.847A1 1 0 0 1 11.936 8a1 1 0 0 1 .868.5l1.068 2.847.564-1.503a1 1 0 1 1 1.872.702l-1.5 4a1 1 0 0 1-.936.649 1 1 0 0 1-.868-.5L12 11.847l-1.132 2.848a1 1 0 0 1-.868.5z" fill="white"/>
                </svg>
              {% endif %}
            </div>
          </div>
          <p class="reel-title">{{ block.settings.title }}</p>
        </div>
      {%- endfor -%}
    </div>
    <button class="scroll-button prev" aria-label="Previous">‹</button>
    <button class="scroll-button next" aria-label="Next">›</button>
  </div>
</div>

<div id="reelModal" class="reel-modal">
  <div class="modal-content">
    <button class="close-modal">&times;</button>
    <div class="reel-fullscreen-container">
      <div class="reel-embed-container"></div>
    </div>
    <button class="nav-button prev" aria-label="Previous video">↑</button>
    <button class="nav-button next" aria-label="Next video">↓</button>
  </div>
</div>

{% schema %}
{
  "name": "V10 Social Proof",
  "settings": [
    {
      "type": "header",
      "content": "Title Settings"
    },
    {
      "type": "text",
      "id": "title",
      "label": "Section Title",
      "default": "SEE HOW OTHERS DO IT"
    },
    {
      "type": "color",
      "id": "title_color",
      "label": "Title Color",
      "default": "#333333"
    },
    {
      "type": "range",
      "id": "title_size",
      "min": 20,
      "max": 50,
      "step": 1,
      "unit": "px",
      "label": "Title Size",
      "default": 32
    },
    {
      "type": "header",
      "content": "Instagram Integration"
    },
    {
      "type": "text",
      "id": "instagram_client_id",
      "label": "Instagram Client ID"
    },
    {
      "type": "text",
      "id": "instagram_client_secret",
      "label": "Instagram Client Secret"
    },
    {
      "type": "text",
      "id": "instagram_access_token",
      "label": "Instagram Access Token"
    },
    {
      "type": "header",
      "content": "TikTok Integration"
    },
    {
      "type": "text",
      "id": "tiktok_client_key",
      "label": "TikTok Client Key"
    },
    {
      "type": "text",
      "id": "tiktok_client_secret",
      "label": "TikTok Client Secret"
    },
    {
      "type": "text",
      "id": "tiktok_access_token",
      "label": "TikTok Access Token"
    }
  ],
  "blocks": [
    {
      "type": "reel",
      "name": "Social Media Video",
      "settings": [
        {
          "type": "text",
          "id": "title",
          "label": "Title",
          "default": "User Story"
        },
        {
          "type": "select",
          "id": "platform",
          "label": "Platform",
          "options": [
            {
              "value": "instagram",
              "label": "Instagram"
            },
            {
              "value": "tiktok",
              "label": "TikTok"
            }
          ],
          "default": "instagram"
        },
        {
          "type": "image_picker",
          "id": "thumbnail_image",
          "label": "Thumbnail Image (Fallback)"
        },
        {
          "type": "video_url",
          "id": "video_preview",
          "label": "Video Preview",
          "accept": ["video/*"]
        },
        {
          "type": "url",
          "id": "reel_url",
          "label": "Video URL"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "V10 Social Proof",
      "blocks": [
        {
          "type": "reel"
        },
        {
          "type": "reel"
        },
        {
          "type": "reel"
        },
        {
          "type": "reel"
        },
        {
          "type": "reel"
        }
      ]
    }
  ]
}
{% endschema %}

{% stylesheet %}
.hyperlab-v10-social-proof {
  padding: 3px 0;
  background: #fff;
  position: relative;
  overflow: hidden;
}

.section-title {
  font-size: 14px;
  font-weight: bold;
  text-align: center;
  margin: 6px 0;
  color: #333;
}

.reels-container {
  position: relative;
  padding: 2px 3px;
  overflow: hidden;
  background: #f8f8f8;
}

.reels-scroll-wrapper {
  display: flex;
  gap: 4px;
  padding: 2px 0;
  overflow-x: auto;
  scroll-behavior: smooth;
  -webkit-overflow-scrolling: touch;
  scrollbar-width: none;
  -ms-overflow-style: none;
}

.reels-scroll-wrapper::-webkit-scrollbar {
  display: none;
}

.reel-bubble {
  flex: 0 0 45px;
  padding: 2px;
  cursor: pointer;
  transition: transform 0.2s ease;
}

.reel-bubble:hover {
  transform: scale(1.05);
}

.reel-thumbnail {
  width: 45px;
  height: 45px;
  border-radius: 8px;
  object-fit: cover;
  margin: 2px;
  border: 1px solid #ddd;
  box-shadow: 0 1px 2px rgba(0,0,0,0.1);
}

.play-button {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 14px;
  height: 14px;
  background: rgba(0,0,0,0.6);
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  color: white;
  font-size: 8px;
}

.reel-title {
  font-size: 8px;
  color: #333;
  margin: 2px 0 0;
  text-align: center;
  max-width: 45px;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.scroll-button {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  width: 16px;
  height: 16px;
  background: rgba(255,255,255,0.9);
  border: 1px solid #ddd;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  z-index: 2;
  font-size: 10px;
  color: #333;
  box-shadow: 0 1px 2px rgba(0,0,0,0.1);
}

.scroll-left {
  left: 2px;
}

.scroll-right {
  right: 2px;
}

.reel-fullscreen-container {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0,0,0,0.9);
  z-index: 1000;
  display: none;
  justify-content: center;
  align-items: center;
}

.reel-fullscreen-container.active {
  display: flex;
}

.reel-fullscreen-content {
  position: relative;
  width: 100%;
  max-width: 300px;
  margin: 0 auto;
}

.reel-fullscreen-video {
  width: 100%;
  height: auto;
  border-radius: 4px;
}

.close-modal {
  position: absolute;
  top: 10px;
  right: 10px;
  color: white;
  font-size: 18px;
  cursor: pointer;
  z-index: 1001;
}

.nav-button {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  background: rgba(255,255,255,0.2);
  border: none;
  color: white;
  width: 30px;
  height: 30px;
  border-radius: 50%;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 16px;
}

.nav-prev {
  left: 10px;
}

.nav-next {
  right: 10px;
}

@media screen and (min-width: 768px) {
  .reels-container {
    padding: 5px 10px;
  }

  .reels-scroll-wrapper {
    gap: 6px;
  }

  .scroll-button {
    width: 20px;
    height: 20px;
    font-size: 12px;
  }

  .reel-fullscreen-container {
    max-width: 350px;
  }

  .close-modal {
    font-size: 20px;
  }

  .nav-button {
    width: 35px;
    height: 35px;
    font-size: 18px;
  }
}

@media screen and (min-width: 990px) {
  .reels-container {
    padding: 8px 15px;
  }

  .reels-scroll-wrapper {
    gap: 8px;
  }

  .scroll-button {
    width: 24px;
    height: 24px;
    font-size: 14px;
  }

  .reel-fullscreen-container {
    max-width: 400px;
  }

  .close-modal {
    font-size: 24px;
  }

  .nav-button {
    width: 40px;
    height: 40px;
    font-size: 20px;
  }
}
{% endstylesheet %}

{% javascript %}
document.addEventListener('DOMContentLoaded', function() {
  const reelsContainer = document.querySelector('.reels-scroll-wrapper');
  const reelBubbles = document.querySelectorAll('.reel-bubble');
  const modal = document.getElementById('reelModal');
  const closeModal = modal.querySelector('.close-modal');
  const embedContainer = modal.querySelector('.reel-embed-container');
  const prevButton = document.querySelector('.scroll-button.prev');
  const nextButton = document.querySelector('.scroll-button.next');
  const modalPrevButton = modal.querySelector('.nav-button.prev');
  const modalNextButton = modal.querySelector('.nav-button.next');
  
  // Preview video hover effect
  reelBubbles.forEach(bubble => {
    const video = bubble.querySelector('.preview-video');
    if (video) {
      bubble.addEventListener('mouseenter', () => {
        video.play();
      });
      
      bubble.addEventListener('mouseleave', () => {
        video.pause();
        video.currentTime = 0;
      });
    }
  });

  // Touch scroll handling
  let isScrolling = false;
  let startX;
  let scrollLeft;

  reelsContainer.addEventListener('touchstart', (e) => {
    isScrolling = true;
    startX = e.touches[0].pageX - reelsContainer.offsetLeft;
    scrollLeft = reelsContainer.scrollLeft;
  });

  reelsContainer.addEventListener('touchmove', (e) => {
    if (!isScrolling) return;
    e.preventDefault();
    const x = e.touches[0].pageX - reelsContainer.offsetLeft;
    const walk = (x - startX) * 2;
    reelsContainer.scrollLeft = scrollLeft - walk;
  });

  reelsContainer.addEventListener('touchend', () => {
    isScrolling = false;
  });

  // Scroll buttons
  prevButton.addEventListener('click', () => {
    reelsContainer.scrollBy({
      left: -200,
      behavior: 'smooth'
    });
  });

  nextButton.addEventListener('click', () => {
    reelsContainer.scrollBy({
      left: 200,
      behavior: 'smooth'
    });
  });

  // Show/hide scroll buttons based on scroll position
  reelsContainer.addEventListener('scroll', () => {
    const isAtStart = reelsContainer.scrollLeft === 0;
    const isAtEnd = reelsContainer.scrollLeft + reelsContainer.clientWidth >= reelsContainer.scrollWidth;

    prevButton.style.opacity = isAtStart ? '0' : '1';
    nextButton.style.opacity = isAtEnd ? '0' : '1';
  });

  // Initial scroll button visibility
  const canScroll = reelsContainer.scrollWidth > reelsContainer.clientWidth;
  prevButton.style.display = nextButton.style.display = canScroll ? 'flex' : 'none';
  prevButton.style.opacity = '0';

  // Modal functionality
  let currentReelIndex = 0;

  function showReel(index) {
    const reel = reelBubbles[index];
    const reelUrl = reel.getAttribute('data-reel-url');
    const platform = reel.getAttribute('data-platform');
    
    let embedHtml = '';
    if (platform === 'tiktok') {
      embedHtml = `<blockquote class="tiktok-embed" cite="${reelUrl}">
        <section><a target="_blank" href="${reelUrl}"></a></section>
      </blockquote>
      <script async src="https://www.tiktok.com/embed.js"></script>`;
    } else {
      embedHtml = `<iframe src="${reelUrl}embed" frameborder="0" allowfullscreen></iframe>`;
    }
    
    embedContainer.innerHTML = embedHtml;
  }

  reelBubbles.forEach((bubble, index) => {
    bubble.addEventListener('click', () => {
      currentReelIndex = index;
      showReel(currentReelIndex);
      modal.style.display = 'block';
      document.body.style.overflow = 'hidden';
    });
  });

  // Modal navigation
  modalPrevButton.addEventListener('click', () => {
    currentReelIndex = (currentReelIndex - 1 + reelBubbles.length) % reelBubbles.length;
    showReel(currentReelIndex);
  });

  modalNextButton.addEventListener('click', () => {
    currentReelIndex = (currentReelIndex + 1) % reelBubbles.length;
    showReel(currentReelIndex);
  });

  // Swipe handling for modal
  let touchStartY = 0;
  modal.addEventListener('touchstart', (e) => {
    touchStartY = e.touches[0].clientY;
  });

  modal.addEventListener('touchmove', (e) => {
    e.preventDefault();
  });

  modal.addEventListener('touchend', (e) => {
    const touchEndY = e.changedTouches[0].clientY;
    const diff = touchStartY - touchEndY;
    
    if (Math.abs(diff) > 50) {
      if (diff > 0) {
        // Swipe up - next
        currentReelIndex = (currentReelIndex + 1) % reelBubbles.length;
      } else {
        // Swipe down - previous
        currentReelIndex = (currentReelIndex - 1 + reelBubbles.length) % reelBubbles.length;
      }
      showReel(currentReelIndex);
    }
  });

  // Close modal
  closeModal.addEventListener('click', () => {
    modal.style.display = 'none';
    embedContainer.innerHTML = '';
    document.body.style.overflow = '';
  });

  // Close on click outside
  modal.addEventListener('click', (e) => {
    if (e.target === modal) {
      modal.style.display = 'none';
      embedContainer.innerHTML = '';
      document.body.style.overflow = '';
    }
  });
});
{% endjavascript %} 